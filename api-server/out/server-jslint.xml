<?xml version="1.0" encoding="utf-8"?>
<jslint>
<file name="bin/www">
<issue line="1" char="1" reason="Unexpected '#'." evidence="#!/usr/bin/env node"/>
<issue line="1" char="2" reason="Stopping. (1% scanned)." evidence=""/>
</file>
<file name="lib/route-cache/index.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="13" reason="'require' was used before it was defined." evidence="var Cache = require('./lib/cache');"/>
<issue line="20" char="1" reason="'module' was used before it was defined." evidence="module.exports = RouteCache;"/>
</file>
<file name="lib/route-cache/lib/cache.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="10" reason="'require' was used before it was defined." evidence="var fs = require('fs');"/>
<issue line="3" char="15" reason="'require' was used before it was defined." evidence="var winston = require('winston');"/>
<issue line="4" char="13" reason="'require' was used before it was defined." evidence="var Route = require('./route');"/>
<issue line="17" char="55" reason="'process' was used before it was defined." evidence="        this.filename = options &amp;&amp; options.filename ? process.cwd() + options.filename : process.cwd() + '/filecache.json';"/>
<issue line="17" char="90" reason="'process' was used before it was defined." evidence="        this.filename = options &amp;&amp; options.filename ? process.cwd() + options.filename : process.cwd() + '/filecache.json';"/>
<issue line="30" char="12" reason="Unexpected sync method: 'unlinkSync'." evidence="        fs.unlinkSync(this.filename);"/>
<issue line="32" char="9" reason="'global' was used before it was defined." evidence="        global.memcache = {};"/>
<issue line="49" char="32" reason="Unexpected sync method: 'readFileSync'." evidence="            var filecache = fs.readFileSync(this.filename);"/>
<issue line="52" char="21" reason="'global' was used before it was defined." evidence="            cache = global.memcache;"/>
<issue line="88" char="7" reason="Unnecessary 'else' after disruption." evidence="    } else {"/>
<issue line="89" char="9" reason="'global' was used before it was defined." evidence="        global.memcache = cache;"/>
<issue line="107" char="32" reason="Unexpected sync method: 'readFileSync'." evidence="            var filecache = fs.readFileSync(this.filename);"/>
<issue line="111" char="21" reason="'global' was used before it was defined." evidence="            cache = global.memcache;"/>
<issue line="121" char="7" reason="Unnecessary 'else' after disruption." evidence="    } else {"/>
<issue line="140" char="32" reason="Unexpected sync method: 'readFileSync'." evidence="            var filecache = fs.readFileSync(this.filename);"/>
<issue line="143" char="21" reason="'global' was used before it was defined." evidence="            cache = global.memcache;"/>
<issue line="167" char="7" reason="Unnecessary 'else' after disruption." evidence="    } else {"/>
<issue line="168" char="9" reason="'global' was used before it was defined." evidence="        global.memcache = cache;"/>
<issue line="173" char="1" reason="'module' was used before it was defined." evidence="module.exports = Cache;"/>
</file>
<file name="lib/route-cache/lib/route.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="31" char="1" reason="'module' was used before it was defined." evidence="module.exports = Route;"/>
</file>
<file name="lib/test.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="13" reason="'require' was used before it was defined." evidence="var Cache = require('./cache');"/>
<issue line="5" char="1" reason="'console' was used before it was defined." evidence="console.dir(cache);"/>
<issue line="11" char="1" reason="'console' was used before it was defined." evidence="console.dir(save);"/>
</file>
<file name="modules/repository/component/index.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="3" char="15" reason="'require' was used before it was defined." evidence="var compSrv = require('./services/comp');"/>
<issue line="4" char="15" reason="'require' was used before it was defined." evidence="var CompMdl = require('./models/comp');"/>
<issue line="5" char="18" reason="'require' was used before it was defined." evidence="var compDevSrv = require('./services/compDev');"/>
<issue line="6" char="18" reason="'require' was used before it was defined." evidence="var CompDevMdl = require('./models/compDev');"/>
<issue line="7" char="17" reason="'require' was used before it was defined." evidence="var statusSrv = require('./services/status');"/>
<issue line="8" char="17" reason="'require' was used before it was defined." evidence="var StatusMdl = require('./models/status');"/>
<issue line="19" char="1" reason="'exports' was used before it was defined." evidence="exports.getComps = function (callback) {"/>
<issue line="38" char="1" reason="'exports' was used before it was defined." evidence="exports.findComps = function (callback) {"/>
<issue line="67" char="1" reason="'exports' was used before it was defined." evidence="exports.insOrUpdComp = function (_platfrm_id, _suprlay_id, _layer_id, name, type, description, difficulty, code_level, repo_dir, found, callback) {"/>
<issue line="72" char="18" reason="['$and'] is better written in dot notation." evidence="        find_obj['$and'].push({"/>
<issue line="77" char="18" reason="['$and'] is better written in dot notation." evidence="        find_obj['$and'].push({"/>
<issue line="82" char="18" reason="['$and'] is better written in dot notation." evidence="        find_obj['$and'].push({"/>
<issue line="87" char="18" reason="['$and'] is better written in dot notation." evidence="        find_obj['$and'].push({"/>
<issue line="94" char="11" reason="Unnecessary 'else' after disruption." evidence="        } else if (res_comp) {"/>
<issue line="96" char="30" reason="Expected '!==' and instead saw '!='." evidence="            if (type &amp;&amp; type != res_comp.type) {"/>
<issue line="100" char="44" reason="Expected '!==' and instead saw '!='." evidence="            if (description &amp;&amp; description != res_comp.description) {"/>
<issue line="104" char="42" reason="Expected '!==' and instead saw '!='." evidence="            if (difficulty &amp;&amp; difficulty != res_comp.difficulty) {"/>
<issue line="108" char="42" reason="Expected '!==' and instead saw '!='." evidence="            if (code_level &amp;&amp; code_level != res_comp.code_level) {"/>
<issue line="112" char="38" reason="Expected '!==' and instead saw '!='." evidence="            if (repo_dir &amp;&amp; repo_dir != res_comp.repo_dir) {"/>
<issue line="116" char="32" reason="Expected '!==' and instead saw '!='." evidence="            if (found &amp;&amp; found != res_comp.found) {"/>
<issue line="122" char="34" reason="Expected '{' and instead saw 'return'." evidence="                    if (err_upd) return callback(err_upd, null);"/>
<issue line="122" char="34" reason="Stopping. (40% scanned)." evidence=""/>
</file>
<file name="modules/database/dao.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="3" char="15" reason="'require' was used before it was defined." evidence="var winston = require('winston');"/>
<issue line="4" char="14" reason="'require' was used before it was defined." evidence="var config = require('../../config');"/>
<issue line="53" char="22" reason="Expected '{' and instead saw 'winston'." evidence="            if (err) winston.log('info', 'Mongoose default connection error', err);"/>
<issue line="53" char="22" reason="Stopping. (13% scanned)." evidence=""/>
</file>
<file name="modules/repository/component/models/comp.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="76" char="13" reason="Redefinition of 'words' from line 72." evidence="        var words = string.split(&quot; &quot;);"/>
<issue line="78" char="14" reason="Move 'var' declarations to the top of the function." evidence="        for (var i = 0, l = words.length; i &lt; l; i++) {"/>
<issue line="78" char="14" reason="Stopping. (72% scanned)." evidence=""/>
</file>
<file name="modules/repository/component/models/compDev.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="54" char="1" reason="'module' was used before it was defined." evidence="module.exports = CompDevMdl;"/>
</file>
<file name="modules/repository/component/models/status.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="89" char="1" reason="'module' was used before it was defined." evidence="module.exports = StatusMdl;"/>
</file>
<file name="modules/repository/component/schemas/comp.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="91" char="1" reason="'module' was used before it was defined." evidence="module.exports = compSchema;"/>
</file>
<file name="modules/repository/component/schemas/compDev.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="53" char="1" reason="'module' was used before it was defined." evidence="module.exports = compDevSchema;"/>
</file>
<file name="modules/repository/component/schemas/status.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="41" char="12" reason="Unexpected ','." evidence="    name: 1,"/>
<issue line="46" char="1" reason="'module' was used before it was defined." evidence="module.exports = statusSchema;"/>
</file>
<file name="modules/repository/component/services/compDev.js">
<issue line="1" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="2" char="11" reason="'require' was used before it was defined." evidence="var Dao = require('../../../database/dao');"/>
<issue line="3" char="18" reason="'require' was used before it was defined." evidence="var compDevMdl = require('../models/compDev');"/>
<issue line="4" char="18" reason="'require' was used before it was defined." evidence="var compDevSch = require('../schemas/compDev');"/>
<issue line="5" char="15" reason="'require' was used before it was defined." evidence="var compMdl = require('../models/comp');"/>
<issue line="6" char="15" reason="'require' was used before it was defined." evidence="var compSch = require('../schemas/comp');"/>
<issue line="7" char="14" reason="'require' was used before it was defined." evidence="var devMdl = require('../../developer/models/dev');"/>
<issue line="8" char="14" reason="'require' was used before it was defined." evidence="var devSch = require('../../developer/schemas/dev');"/>
<issue line="27" char="1" reason="'exports' was used before it was defined." evidence="exports.insertCompDev = function(compDev_mdl, callback) {"/>
<issue line="27" char="33" reason="Expected exactly one space between 'function' and '('." evidence="exports.insertCompDev = function(compDev_mdl, callback) {"/>
<issue line="28" char="5" reason="Missing 'use strict' statement." evidence="    compDevDao.insertSchema(compDev_mdl, function(err, compDev) {"/>
<issue line="28" char="50" reason="Expected exactly one space between 'function' and '('." evidence="    compDevDao.insertSchema(compDev_mdl, function(err, compDev) {"/>
<issue line="43" char="1" reason="'exports' was used before it was defined." evidence="exports.findCompDevById = function(_id, callback) {"/>
<issue line="43" char="35" reason="Expected exactly one space between 'function' and '('." evidence="exports.findCompDevById = function(_id, callback) {"/>
<issue line="44" char="5" reason="Missing 'use strict' statement." evidence="    compDevDao.findAndPopulateSchemaById(_id, '_dev_id _comp_id', function(err, compDev) {"/>
<issue line="44" char="75" reason="Expected exactly one space between 'function' and '('." evidence="    compDevDao.findAndPopulateSchemaById(_id, '_dev_id _comp_id', function(err, compDev) {"/>
<issue line="59" char="1" reason="'exports' was used before it was defined." evidence="exports.findCompDev = function(query, callback) {"/>
<issue line="59" char="31" reason="Expected exactly one space between 'function' and '('." evidence="exports.findCompDev = function(query, callback) {"/>
<issue line="60" char="5" reason="Missing 'use strict' statement." evidence="    compDevDao.findAndPopulateSchema(query, '_dev_id _comp_id', function(err, compDev) {"/>
<issue line="60" char="73" reason="Expected exactly one space between 'function' and '('." evidence="    compDevDao.findAndPopulateSchema(query, '_dev_id _comp_id', function(err, compDev) {"/>
<issue line="77" char="1" reason="'exports' was used before it was defined." evidence="exports.findCompDevs = function(query, limit, order, callback) {"/>
<issue line="77" char="32" reason="Expected exactly one space between 'function' and '('." evidence="exports.findCompDevs = function(query, limit, order, callback) {"/>
<issue line="78" char="5" reason="Missing 'use strict' statement." evidence="    compDevDao.findAndPopulateSchemaLst(query, limit, order, '_dev_id _comp_id', function(err, compDev) {"/>
<issue line="78" char="90" reason="Expected exactly one space between 'function' and '('." evidence="    compDevDao.findAndPopulateSchemaLst(query, limit, order, '_dev_id _comp_id', function(err, compDev) {"/>
<issue line="94" char="1" reason="'exports' was used before it was defined." evidence="exports.findAllCompDevs = function(query, order, callback) {"/>
<issue line="94" char="35" reason="Expected exactly one space between 'function' and '('." evidence="exports.findAllCompDevs = function(query, order, callback) {"/>
<issue line="95" char="5" reason="Missing 'use strict' statement." evidence="    compDevDao.findAndPopulateAllSchemaLst(query, order, '_dev_id _comp_id', function(err, compDev) {"/>
<issue line="95" char="86" reason="Expected exactly one space between 'function' and '('." evidence="    compDevDao.findAndPopulateAllSchemaLst(query, order, '_dev_id _comp_id', function(err, compDev) {"/>
<issue line="111" char="1" reason="'exports' was used before it was defined." evidence="exports.updateCompDevById = function(_id, set, callback) {"/>
<issue line="111" char="37" reason="Expected exactly one space between 'function' and '('." evidence="exports.updateCompDevById = function(_id, set, callback) {"/>
<issue line="112" char="5" reason="Missing 'use strict' statement." evidence="    set.upd_at = new mongoose.Types.ObjectId();"/>
<issue line="115" char="25" reason="Expected exactly one space between 'function' and '('." evidence="    }, set, {}, function(err, compDev) {"/>
</file>
<file name="modules/repository/component/services/comp.js">
<issue line="1" char="13" reason="'require' was used before it was defined." evidence="var async = require('async');"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="3" char="11" reason="'require' was used before it was defined." evidence="var Dao = require('../../../database/dao');"/>
<issue line="4" char="14" reason="'require' was used before it was defined." evidence="var devSrv = require('../../developer/services/dev');"/>
<issue line="5" char="15" reason="'require' was used before it was defined." evidence="var compMdl = require('../models/comp');"/>
<issue line="6" char="15" reason="'require' was used before it was defined." evidence="var compSch = require('../schemas/comp');"/>
<issue line="7" char="17" reason="'require' was used before it was defined." evidence="var statusMdl = require('../models/status');"/>
<issue line="8" char="17" reason="'require' was used before it was defined." evidence="var statusSch = require('../schemas/status');"/>
<issue line="9" char="18" reason="'require' was used before it was defined." evidence="var compDevMdl = require('../models/compDev');"/>
<issue line="10" char="18" reason="'require' was used before it was defined." evidence="var compDevSch = require('../schemas/compDev');"/>
<issue line="11" char="18" reason="'require' was used before it was defined." evidence="var platfrmMdl = require('../../platform/models/platfrm');"/>
<issue line="12" char="18" reason="'require' was used before it was defined." evidence="var platfrmSch = require('../../platform/schemas/platfrm');"/>
<issue line="13" char="18" reason="'require' was used before it was defined." evidence="var suprlayMdl = require('../../superlayer/models/suprlay');"/>
<issue line="14" char="18" reason="'require' was used before it was defined." evidence="var suprlaySch = require('../../superlayer/schemas/suprlay');"/>
<issue line="15" char="16" reason="'require' was used before it was defined." evidence="var layerMdl = require('../../layer/models/layer');"/>
<issue line="16" char="16" reason="'require' was used before it was defined." evidence="var layerSch = require('../../layer/schemas/layer');"/>
<issue line="40" char="1" reason="'exports' was used before it was defined." evidence="exports.insertComp = function(comp_mdl, callback) {"/>
<issue line="40" char="30" reason="Expected exactly one space between 'function' and '('." evidence="exports.insertComp = function(comp_mdl, callback) {"/>
<issue line="41" char="5" reason="Missing 'use strict' statement." evidence="    compDao.insertSchema(comp_mdl, function(err, comp) {"/>
<issue line="41" char="44" reason="Expected exactly one space between 'function' and '('." evidence="    compDao.insertSchema(comp_mdl, function(err, comp) {"/>
<issue line="56" char="1" reason="'exports' was used before it was defined." evidence="exports.findCompById = function(_id, callback) {"/>
<issue line="56" char="32" reason="Expected exactly one space between 'function' and '('." evidence="exports.findCompById = function(_id, callback) {"/>
<issue line="57" char="5" reason="Missing 'use strict' statement." evidence="    compDao.findSchemaById(_id, function(err, comp) {"/>
<issue line="57" char="41" reason="Expected exactly one space between 'function' and '('." evidence="    compDao.findSchemaById(_id, function(err, comp) {"/>
<issue line="73" char="1" reason="'exports' was used before it was defined." evidence="exports.findAndPopulateCompById = function(_id, path, callback) {"/>
<issue line="73" char="43" reason="Expected exactly one space between 'function' and '('." evidence="exports.findAndPopulateCompById = function(_id, path, callback) {"/>
<issue line="74" char="5" reason="Missing 'use strict' statement." evidence="    compDao.findAndPopulateSchemaById(_id, path, function(err, comp) {"/>
<issue line="74" char="58" reason="Expected exactly one space between 'function' and '('." evidence="    compDao.findAndPopulateSchemaById(_id, path, function(err, comp) {"/>
<issue line="89" char="1" reason="'exports' was used before it was defined." evidence="exports.findComp = function(query, callback) {"/>
<issue line="89" char="28" reason="Expected exactly one space between 'function' and '('." evidence="exports.findComp = function(query, callback) {"/>
<issue line="90" char="5" reason="Missing 'use strict' statement." evidence="    compDao.findSchema(query, function(err, comp) {"/>
<issue line="90" char="39" reason="Expected exactly one space between 'function' and '('." evidence="    compDao.findSchema(query, function(err, comp) {"/>
<issue line="105" char="1" reason="'exports' was used before it was defined." evidence="exports.findComps = function(query, sort, callback) {"/>
<issue line="105" char="29" reason="Expected exactly one space between 'function' and '('." evidence="exports.findComps = function(query, sort, callback) {"/>
<issue line="106" char="5" reason="Missing 'use strict' statement." evidence="    compDao.findAllSchemaLst(query, sort, function(err, comp) {"/>
<issue line="106" char="51" reason="Expected exactly one space between 'function' and '('." evidence="    compDao.findAllSchemaLst(query, sort, function(err, comp) {"/>
<issue line="122" char="1" reason="'exports' was used before it was defined." evidence="exports.findAllComps = function(query, order, callback) {"/>
<issue line="122" char="32" reason="Expected exactly one space between 'function' and '('." evidence="exports.findAllComps = function(query, order, callback) {"/>
<issue line="123" char="5" reason="Missing 'use strict' statement." evidence="    compDao.findAndPopulateAllSchemaLst(query, order, 'life_cycle devs', function(err, comps) {"/>
<issue line="123" char="82" reason="Expected exactly one space between 'function' and '('." evidence="    compDao.findAndPopulateAllSchemaLst(query, order, 'life_cycle devs', function(err, comps) {"/>
<issue line="129" char="37" reason="Expected exactly one space between 'function' and '('." evidence="            var loopComps = function(i) {"/>
<issue line="136" char="48" reason="Expected exactly one space between 'function' and '('." evidence="                    var loopCompDevs = function(j) {"/>
<issue line="139" char="78" reason="Expected exactly one space between 'function' and '('." evidence="                            devSrv.findDevById(_compDevs[j]._dev_id, function(err_dev, res_dev) {"/>
<issue line="133" char="25" reason="Unused '_lifeCycle'." evidence="                    var _lifeCycle = _comp.life_cycle;"/>
<issue line="178" char="1" reason="'exports' was used before it was defined." evidence="exports.updateCompById = function(_id, set, callback) {"/>
<issue line="178" char="34" reason="Expected exactly one space between 'function' and '('." evidence="exports.updateCompById = function(_id, set, callback) {"/>
<issue line="179" char="5" reason="Missing 'use strict' statement." evidence="    set.upd_at = new mongoose.Types.ObjectId();"/>
<issue line="182" char="25" reason="Expected exactly one space between 'function' and '('." evidence="    }, set, {}, function(err, comp) {"/>
<issue line="198" char="1" reason="'exports' was used before it was defined." evidence="exports.pushDevToCompById = function(_id, _compDev_id, callback) {"/>
<issue line="198" char="37" reason="Expected exactly one space between 'function' and '('." evidence="exports.pushDevToCompById = function(_id, _compDev_id, callback) {"/>
<issue line="198" char="37" reason="Too many errors. (73% scanned)." evidence=""/>
</file>
<file name="modules/repository/component/services/status.js">
<issue line="1" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="2" char="11" reason="'require' was used before it was defined." evidence="var Dao = require('../../../database/dao');"/>
<issue line="3" char="17" reason="'require' was used before it was defined." evidence="var statusMdl = require('../models/status');"/>
<issue line="4" char="17" reason="'require' was used before it was defined." evidence="var statusSch = require('../schemas/status');"/>
<issue line="5" char="15" reason="'require' was used before it was defined." evidence="var compMdl = require('../models/comp');"/>
<issue line="6" char="15" reason="'require' was used before it was defined." evidence="var compSch = require('../schemas/comp');"/>
<issue line="25" char="1" reason="'exports' was used before it was defined." evidence="exports.insertStatus = function(status_mdl, callback) {"/>
<issue line="25" char="32" reason="Expected exactly one space between 'function' and '('." evidence="exports.insertStatus = function(status_mdl, callback) {"/>
<issue line="26" char="5" reason="Missing 'use strict' statement." evidence="    statusDao.insertSchema(status_mdl, function(err, status) {"/>
<issue line="26" char="48" reason="Expected exactly one space between 'function' and '('." evidence="    statusDao.insertSchema(status_mdl, function(err, status) {"/>
<issue line="41" char="1" reason="'exports' was used before it was defined." evidence="exports.findStatusById = function(_id, callback) {"/>
<issue line="41" char="34" reason="Expected exactly one space between 'function' and '('." evidence="exports.findStatusById = function(_id, callback) {"/>
<issue line="42" char="5" reason="Missing 'use strict' statement." evidence="    statusDao.findSchemaById(_id, function(err, status) {"/>
<issue line="42" char="43" reason="Expected exactly one space between 'function' and '('." evidence="    statusDao.findSchemaById(_id, function(err, status) {"/>
<issue line="57" char="1" reason="'exports' was used before it was defined." evidence="exports.findStatus = function(query, callback) {"/>
<issue line="57" char="30" reason="Expected exactly one space between 'function' and '('." evidence="exports.findStatus = function(query, callback) {"/>
<issue line="58" char="5" reason="Missing 'use strict' statement." evidence="    statusDao.findAndPopulateSchema(query, '_comp_id', function(err, compDev) {"/>
<issue line="58" char="64" reason="Expected exactly one space between 'function' and '('." evidence="    statusDao.findAndPopulateSchema(query, '_comp_id', function(err, compDev) {"/>
<issue line="75" char="1" reason="'exports' was used before it was defined." evidence="exports.findStatuses = function(query, limit, order, callback) {"/>
<issue line="75" char="32" reason="Expected exactly one space between 'function' and '('." evidence="exports.findStatuses = function(query, limit, order, callback) {"/>
<issue line="76" char="5" reason="Missing 'use strict' statement." evidence="    statusDao.findAndPopulateSchemaLst(query, limit, order, '_comp_id', function(err, status) {"/>
<issue line="76" char="81" reason="Expected exactly one space between 'function' and '('." evidence="    statusDao.findAndPopulateSchemaLst(query, limit, order, '_comp_id', function(err, status) {"/>
<issue line="92" char="1" reason="'exports' was used before it was defined." evidence="exports.findAllStatuses = function(query, order, callback) {"/>
<issue line="92" char="35" reason="Expected exactly one space between 'function' and '('." evidence="exports.findAllStatuses = function(query, order, callback) {"/>
<issue line="93" char="5" reason="Missing 'use strict' statement." evidence="    statusDao.findAndPopulateAllSchemaLst(query, order, '_comp_id', function(err, status) {"/>
<issue line="93" char="77" reason="Expected exactly one space between 'function' and '('." evidence="    statusDao.findAndPopulateAllSchemaLst(query, order, '_comp_id', function(err, status) {"/>
<issue line="109" char="1" reason="'exports' was used before it was defined." evidence="exports.updateStatusById = function(_id, set, callback) {"/>
<issue line="109" char="36" reason="Expected exactly one space between 'function' and '('." evidence="exports.updateStatusById = function(_id, set, callback) {"/>
<issue line="110" char="5" reason="Missing 'use strict' statement." evidence="    set.upd_at = new mongoose.Types.ObjectId();"/>
<issue line="113" char="25" reason="Expected exactly one space between 'function' and '('." evidence="    }, set, {}, function(err, status) {"/>
</file>
<file name="modules/repository/developer/index.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="14" reason="'require' was used before it was defined." evidence="var devSrv = require('./services/dev');"/>
<issue line="3" char="14" reason="'require' was used before it was defined." evidence="var DevMdl = require('./models/dev');"/>
<issue line="22" char="1" reason="'exports' was used before it was defined." evidence="exports.insOrUpdDev = function (usrnm, email, name, bday, country, avatar_url, url, bio, callback) {"/>
<issue line="26" char="11" reason="Unnecessary 'else' after disruption." evidence="        } else if (res_dev) {"/>
<issue line="28" char="32" reason="Expected '!==' and instead saw '!='." evidence="            if (email &amp;&amp; email != res_dev.email) {"/>
<issue line="32" char="30" reason="Expected '!==' and instead saw '!='." evidence="            if (name &amp;&amp; name != res_dev.name) {"/>
<issue line="36" char="30" reason="Expected '!==' and instead saw '!='." evidence="            if (bday &amp;&amp; bday != res_dev.bday) {"/>
<issue line="40" char="36" reason="Expected '!==' and instead saw '!='." evidence="            if (country &amp;&amp; country != res_dev.country) {"/>
<issue line="44" char="42" reason="Expected '!==' and instead saw '!='." evidence="            if (avatar_url &amp;&amp; avatar_url != res_dev.avatar_url) {"/>
<issue line="48" char="28" reason="Expected '!==' and instead saw '!='." evidence="            if (url &amp;&amp; url != res_dev.url) {"/>
<issue line="52" char="28" reason="Expected '!==' and instead saw '!='." evidence="            if (bio &amp;&amp; bio != res_dev.bio) {"/>
<issue line="58" char="34" reason="Expected '{' and instead saw 'return'." evidence="                    if (err_upd) return callback(err_upd, null);"/>
<issue line="58" char="34" reason="Stopping. (63% scanned)." evidence=""/>
</file>
<file name="modules/repository/developer/models/dev.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="77" char="1" reason="'module' was used before it was defined." evidence="module.exports = DevMdl;"/>
</file>
<file name="modules/repository/developer/schemas/dev.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="96" char="1" reason="Use spaces, not tabs." evidence="	email: 1"/>
<issue line="98" char="1" reason="Use spaces, not tabs." evidence="	unique: true"/>
<issue line="100" char="1" reason="Use spaces, not tabs." evidence="	name: &quot;devs_email_uq_indx&quot;"/>
<issue line="116" char="1" reason="'module' was used before it was defined." evidence="module.exports = devSchema;"/>
</file>
<file name="modules/repository/developer/services/dev.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="3" char="11" reason="'require' was used before it was defined." evidence="var Dao = require('../../../database/dao');"/>
<issue line="4" char="14" reason="'require' was used before it was defined." evidence="var devMdl = require('../models/dev');"/>
<issue line="5" char="14" reason="'require' was used before it was defined." evidence="var devSch = require('../schemas/dev');"/>
<issue line="24" char="1" reason="'exports' was used before it was defined." evidence="exports.insertDev = function (dev_mdl, callback) {"/>
<issue line="40" char="1" reason="'exports' was used before it was defined." evidence="exports.findDevById = function (_id, callback) {"/>
<issue line="56" char="1" reason="'exports' was used before it was defined." evidence="exports.findDevByEmail = function (email, callback) {"/>
<issue line="74" char="1" reason="'exports' was used before it was defined." evidence="exports.findDevByUsrnm = function (usrnm, callback) {"/>
<issue line="94" char="1" reason="'exports' was used before it was defined." evidence="exports.findDevs = function (query, limit, order, callback) {"/>
<issue line="111" char="1" reason="'exports' was used before it was defined." evidence="exports.findAllDevs = function (query, order, callback) {"/>
<issue line="128" char="1" reason="'exports' was used before it was defined." evidence="exports.updateDevById = function (_id, set, callback) {"/>
</file>
<file name="modules/repository/index.js">
</file>
<file name="modules/repository/layer/index.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var layerSrv = require('./services/layer');"/>
<issue line="3" char="16" reason="'require' was used before it was defined." evidence="var LayerMdl = require('./models/layer');"/>
<issue line="152" char="1" reason="'exports' was used before it was defined." evidence="exports.insOrUpdLayer = function (name, lang, suprlay, order, callback) {"/>
<issue line="157" char="11" reason="Unnecessary 'else' after disruption." evidence="        } else if (res_lay) {"/>
<issue line="159" char="30" reason="Expected '!==' and instead saw '!='." evidence="            if (name &amp;&amp; name != res_lay.name) {"/>
<issue line="163" char="30" reason="Expected '!==' and instead saw '!='." evidence="            if (lang &amp;&amp; lang != res_lay.lang) {"/>
<issue line="167" char="36" reason="Expected '!==' and instead saw '!='." evidence="            if (suprlay &amp;&amp; suprlay != res_lay.suprlay) {"/>
<issue line="171" char="32" reason="Expected '!==' and instead saw '!='." evidence="            if (order &amp;&amp; order != res_lay.order) {"/>
<issue line="177" char="34" reason="Expected '{' and instead saw 'return'." evidence="                    if (err_upd) return callback(err_upd, null);"/>
<issue line="177" char="34" reason="Stopping. (81% scanned)." evidence=""/>
</file>
<file name="modules/repository/layer/models/layer.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="36" char="40" reason="Use the || operator." evidence="    this.suprlay = layerSchema.suprlay ? layerSchema.suprlay : false;"/>
<issue line="51" char="1" reason="'module' was used before it was defined." evidence="module.exports = LayerMdl;"/>
</file>
<file name="modules/repository/layer/schemas/layer.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="50" char="1" reason="'module' was used before it was defined." evidence="module.exports = layerSchema;"/>
</file>
<file name="modules/repository/layer/services/layer.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="3" char="11" reason="'require' was used before it was defined." evidence="var Dao = require('../../../database/dao');"/>
<issue line="4" char="16" reason="'require' was used before it was defined." evidence="var layerMdl = require('../models/layer');"/>
<issue line="5" char="16" reason="'require' was used before it was defined." evidence="var layerSch = require('../schemas/layer');"/>
<issue line="24" char="1" reason="'exports' was used before it was defined." evidence="exports.insertLayer = function (layer_mdl, callback) {"/>
<issue line="40" char="1" reason="'exports' was used before it was defined." evidence="exports.findLayerById = function (_id, callback) {"/>
<issue line="56" char="1" reason="'exports' was used before it was defined." evidence="exports.findLayerByLang = function (lang, callback) {"/>
<issue line="74" char="1" reason="'exports' was used before it was defined." evidence="exports.findLayerByName = function (name, callback) {"/>
<issue line="94" char="1" reason="'exports' was used before it was defined." evidence="exports.findLayers = function (query, limit, order, callback) {"/>
<issue line="111" char="1" reason="'exports' was used before it was defined." evidence="exports.findAllLayers = function (query, order, callback) {"/>
<issue line="128" char="1" reason="'exports' was used before it was defined." evidence="exports.updateLayerById = function (_id, set, callback) {"/>
</file>
<file name="modules/repository/lib/loader.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="3" char="15" reason="'require' was used before it was defined." evidence="var winston = require('winston');"/>
<issue line="4" char="15" reason="'require' was used before it was defined." evidence="var request = require('request');"/>
<issue line="5" char="19" reason="'require' was used before it was defined." evidence="var parseString = require('xml2js').parseString;"/>
<issue line="6" char="18" reason="'require' was used before it was defined." evidence="var platfrmMod = require('../platform');"/>
<issue line="7" char="18" reason="'require' was used before it was defined." evidence="var suprlayMod = require('../superlayer');"/>
<issue line="8" char="16" reason="'require' was used before it was defined." evidence="var layerMod = require('../layer');"/>
<issue line="9" char="15" reason="'require' was used before it was defined." evidence="var compMod = require('../component');"/>
<issue line="10" char="15" reason="'require' was used before it was defined." evidence="var procMod = require('../process');"/>
<issue line="11" char="14" reason="'require' was used before it was defined." evidence="var devMod = require('../developer');"/>
<issue line="36" char="10" reason="Move 'var' declarations to the top of the function." evidence="    for (var i = 0; i &lt; compList.length; i++) {"/>
<issue line="36" char="10" reason="Stopping. (4% scanned)." evidence=""/>
</file>
<file name="modules/repository/platform/index.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="18" reason="'require' was used before it was defined." evidence="var platfrmSrv = require('./services/platfrm');"/>
<issue line="3" char="18" reason="'require' was used before it was defined." evidence="var PlatfrmMdl = require('./models/platfrm');"/>
<issue line="81" char="1" reason="'exports' was used before it was defined." evidence="exports.insOrUpdPlatfrm = function (code, name, logo, deps, order, callback) {"/>
<issue line="86" char="11" reason="Unnecessary 'else' after disruption." evidence="        } else if (res_plat) {"/>
<issue line="88" char="30" reason="Expected '!==' and instead saw '!='." evidence="            if (name &amp;&amp; name != res_plat.name) {"/>
<issue line="92" char="30" reason="Expected '!==' and instead saw '!='." evidence="            if (logo &amp;&amp; logo != res_plat.logo) {"/>
<issue line="96" char="30" reason="Expected '!==' and instead saw '!='." evidence="            if (deps &amp;&amp; deps != res_plat.deps) {"/>
<issue line="100" char="32" reason="Expected '!==' and instead saw '!='." evidence="            if (order &amp;&amp; order != res_plat.order) {"/>
<issue line="106" char="34" reason="Expected '{' and instead saw 'return'." evidence="                    if (err_upd) return callback(err_upd, null);"/>
<issue line="106" char="34" reason="Stopping. (75% scanned)." evidence=""/>
</file>
<file name="modules/repository/platform/models/platfrm.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="54" char="1" reason="'module' was used before it was defined." evidence="module.exports = PlatfrmMdl;"/>
</file>
<file name="modules/repository/platform/schemas/platfrm.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="56" char="1" reason="'module' was used before it was defined." evidence="module.exports = platfrmSchema;"/>
</file>
<file name="modules/repository/platform/services/platfrm.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="3" char="11" reason="'require' was used before it was defined." evidence="var Dao = require('../../../database/dao');"/>
<issue line="4" char="18" reason="'require' was used before it was defined." evidence="var platfrmMdl = require('../models/platfrm');"/>
<issue line="5" char="18" reason="'require' was used before it was defined." evidence="var platfrmSch = require('../schemas/platfrm');"/>
<issue line="24" char="1" reason="'exports' was used before it was defined." evidence="exports.insertPlatfrm = function (platfrm_mdl, callback) {"/>
<issue line="40" char="1" reason="'exports' was used before it was defined." evidence="exports.findPlatfrmById = function (_id, callback) {"/>
<issue line="56" char="1" reason="'exports' was used before it was defined." evidence="exports.findPlatfrmByCode = function (code, callback) {"/>
<issue line="74" char="1" reason="'exports' was used before it was defined." evidence="exports.findPlatfrmByName = function (name, callback) {"/>
<issue line="94" char="1" reason="'exports' was used before it was defined." evidence="exports.findPlatfrms = function (query, limit, order, callback) {"/>
<issue line="111" char="1" reason="'exports' was used before it was defined." evidence="exports.findAllPlatfrms = function (query, order, callback) {"/>
<issue line="128" char="1" reason="'exports' was used before it was defined." evidence="exports.updatePlatfrmById = function (_id, set, callback) {"/>
</file>
<file name="modules/repository/process/index.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="3" char="15" reason="'require' was used before it was defined." evidence="var stepSrv = require('./services/step');"/>
<issue line="4" char="15" reason="'require' was used before it was defined." evidence="var StepMdl = require('./models/step');"/>
<issue line="5" char="15" reason="'require' was used before it was defined." evidence="var procSrv = require('./services/proc');"/>
<issue line="6" char="15" reason="'require' was used before it was defined." evidence="var ProcMdl = require('./models/proc');"/>
<issue line="7" char="18" reason="'require' was used before it was defined." evidence="var platfrmSrv = require('../platform/services/platfrm');"/>
<issue line="8" char="18" reason="'require' was used before it was defined." evidence="var suprlaySrv = require('../superlayer/services/suprlay');"/>
<issue line="9" char="16" reason="'require' was used before it was defined." evidence="var layerSrv = require('../layer/services/layer');"/>
<issue line="10" char="15" reason="'require' was used before it was defined." evidence="var compSrv = require('../component/services/comp');"/>
<issue line="18" char="11" reason="Unnecessary 'else' after disruption." evidence="        } else if (res_lay) {"/>
<issue line="26" char="23" reason="Unnecessary 'else' after disruption." evidence="                    } else if (res_pla) {"/>
<issue line="36" char="31" reason="Unnecessary 'else' after disruption." evidence="                            } else {"/>
<issue line="53" char="23" reason="Unnecessary 'else' after disruption." evidence="                    } else if (res_sup) {"/>
<issue line="63" char="31" reason="Unnecessary 'else' after disruption." evidence="                            } else {"/>
<issue line="97" char="1" reason="'exports' was used before it was defined." evidence="exports.findProcsByComp = function (platfrm_code, suprlay_code, layer_name, comp_name, callback) {"/>
<issue line="101" char="11" reason="Unnecessary 'else' after disruption." evidence="        } else {"/>
<issue line="108" char="19" reason="Unnecessary 'else' after disruption." evidence="                } else {"/>
<issue line="120" char="30" reason="Move 'var' declarations to the top of the function." evidence="                        for (var i = this.length - 1; i &gt;= 0; i--) {"/>
<issue line="120" char="30" reason="Stopping. (37% scanned)." evidence=""/>
</file>
<file name="modules/repository/process/models/proc.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="57" char="1" reason="'module' was used before it was defined." evidence="module.exports = ProcMdl;"/>
</file>
<file name="modules/repository/process/models/step.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="60" char="1" reason="'module' was used before it was defined." evidence="module.exports = StepMdl;"/>
</file>
<file name="modules/repository/process/schemas/proc.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="57" char="1" reason="'module' was used before it was defined." evidence="module.exports = procSchema;"/>
</file>
<file name="modules/repository/process/schemas/step.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="55" char="1" reason="'module' was used before it was defined." evidence="module.exports = stepSchema;"/>
</file>
<file name="modules/repository/process/services/proc.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="3" char="11" reason="'require' was used before it was defined." evidence="var Dao = require('../../../database/dao');"/>
<issue line="4" char="15" reason="'require' was used before it was defined." evidence="var procMdl = require('../models/proc');"/>
<issue line="5" char="15" reason="'require' was used before it was defined." evidence="var procSch = require('../schemas/proc');"/>
<issue line="6" char="15" reason="'require' was used before it was defined." evidence="var stepMdl = require('../models/step');"/>
<issue line="7" char="15" reason="'require' was used before it was defined." evidence="var stepSch = require('../schemas/step');"/>
<issue line="8" char="15" reason="'require' was used before it was defined." evidence="var stepSrv = require('../services/step');"/>
<issue line="9" char="14" reason="'require' was used before it was defined." evidence="var devMdl = require('../../developer/models/dev');"/>
<issue line="10" char="14" reason="'require' was used before it was defined." evidence="var devSch = require('../../developer/schemas/dev');"/>
<issue line="14" char="1" reason="'exports' was used before it was defined." evidence="exports.insertProc = function (proc_mdl, callback) {"/>
<issue line="20" char="1" reason="'exports' was used before it was defined." evidence="exports.findAndPopulateProc = function (query, callback) {"/>
<issue line="69" char="1" reason="'exports' was used before it was defined." evidence="exports.findProc = function (query, callback) {"/>
<issue line="79" char="1" reason="'exports' was used before it was defined." evidence="exports.updateProcById = function (_id, set, callback) {"/>
</file>
<file name="modules/repository/process/services/step.js">
<issue line="1" char="1" reason="Use the function form of 'use strict'." evidence="'use strict';"/>
<issue line="2" char="16" reason="'require' was used before it was defined." evidence="var mongoose = require('mongoose');"/>
<issue line="3" char="11" reason="'require' was used before it was defined." evidence="var Dao = require('../../../database/dao');"/>
<issue line="4" char="15" reason="'require' was used before it was defined." evidence="var stepMdl = require('../models/step');"/>
<issue line="5" char="15" reason="'require' was used before it was defined." evidence="var stepSch = require('../schemas/step');"/>
<issue line="6" char="15" reason="'require' was used before it was defined." evidence="var procMdl = require('../models/proc');"/>
<issue line="7" char="15" reason="'require' was used before it was defined." evidence="var procSch = require('../schemas/proc');"/>
<issue line="8" char="15" reason="'require' was used before it was defined." evidence="var compMdl = require('../../component/models/comp');"/>
<issue line="9" char="15" reason="'require' was used before it was defined." evidence="var compSch = require('../../component/schemas/comp');"/>
<issue line="10" char="15" reason="'require' was used before it was defined." evidence="var compSrv = require('../../component/services/comp');"/>
<issue line="30" char="1" reason="'exports' was used before it was defined." evidence="exports.insertStep = function (step_mdl, callback) {"/>
<issue line="46" char="1" reason="'exports' was used before it was defined." evidence="exports.findStepById = function (_id, callback) {"/>
<issue line="62" char="1" reason="'exports' was used before it was defined." evidence="exports.findStep = function (query, callback) {"/>
<issue line="79" char="1" reason="'exports' was used before it was defined." evidence="exports.findSteps = function (query, sort, callback) {"/>
<issue line="96" char="1" reason="'exports' was used before it was defined." evidence="exports.findAllSteps = function (query, order, callback) {"/>
<issue line="135" char="1" reason="'exports' was used before it was defined." evidence="exports.updateStepById = function (_id, set, callback) {"/>
<issue line="156" char="1" reason="'exports' was used before it was defined." evidence="exports.findAndPopulateAllSteps = function (query, sort, path, callback) {"/>
</file>
<file name="modules/repository/superlayer/index.js">
</file>
<file name="modules/repository/superlayer/models/suprlay.js">
</file>
<file name="modules/repository/superlayer/schemas/suprlay.js">
</file>
<file name="modules/repository/superlayer/services/suprlay.js">
</file>
<file name="modules/repository/team/index.js">
</file>
<file name="modules/repository/team/models/team.js">
</file>
<file name="modules/repository/team/schemas/team.js">
</file>
<file name="modules/repository/team/services/team.js">
</file>
<file name="routes/index.js">
</file>
<file name="routes/repo.js">
</file>
<file name="routes/users.js">
</file>
</jslint>